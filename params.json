{"name":"Patroon","body":"Patroon - a Javascript Template Engine\r\n======================================\r\n\r\nPatroon is a template engine written in Javascript in about 100 lines\r\nof code. It takes existing DOM nodes annotated with class names and\r\nexpand a data object according to simple rules. Additionally you may\r\nuse traditional string interpolation inside attribute values and text\r\nnodes.\r\n\r\n### The Data\r\n\r\nComments in this blog are stored as a list of JSON objects, I wrote\r\nabout it [here][1]. So think about a data object like this:\r\n\r\n    var data = { \r\n      comment: [{\r\n        time: \"2008-09-07 12:28:33\", \r\n        name: \"David Beckham\",\r\n        website: \"beckham.com\",\r\n        text: \"I watched the euro finals on tv...\" \r\n      }, { \r\n        time: \"2008-09-07 14:28:33\", \r\n        name: \"Tuncay\",\r\n        website: \"\",\r\n        text: \"Me too\"\r\n      }]\r\n    };\r\n    \r\n\r\n### The Template\r\n\r\nThis data will be expanded with help of following template:\r\n\r\n        <div class=\"comments\">  \r\n          <div id=\"comments-template\">\r\n            <div class=\"comment\">\r\n              <div class=\"top\">\r\n                {website.length > 0 ? linkTo(name, website) : name} said\r\n                <a title=\"{time}\"></a>:\r\n              </div>\r\n              <div class=\"text\">\r\n                {text}\r\n              </div>\r\n            </div>   \r\n          </div>\r\n        </div>\r\n\r\n\r\n### Usage\r\n\r\nThe javascript to actually execute this template looks like this:\r\n\r\n    // The comments template will be removed from the DOM!\r\n    var template = new Template('comments-template');\r\n    \r\n    // Expand the template into the comments section\r\n    $('.comments').expand(template, data);\r\n\r\n\r\nIf you don't want to use jQuery, please look at the end of this article.\r\n\r\n\r\n### Output\r\n\r\nThe given example renders following output:\r\n\r\n        <div class=\"comments\">  \r\n          <div id=\"comments-template\">\r\n            <div class=\"comment\">\r\n              <div class=\"top\">\r\n                <a href=\"http://backham.com\">David Beckham</a> said\r\n                <a title=\"2008-09-07 12:28:33\">2 hours ago</a>\r\n              </div>\r\n              <div class=\"text\">\r\n                I watched the euro finals on tv...\r\n              </div>\r\n            </div>   \r\n            <div class=\"comment\">\r\n              <div class=\"top\">\r\n                Tuncay said\r\n                <a title=\"2008-09-07 14:28:33\">1 minute ago</a>\r\n              </div>\r\n              <div class=\"text\">\r\n                Me too\r\n              </div>\r\n            </div>   \r\n          </div>\r\n        </div>\r\n    \r\n    \r\n\r\n### Basic Rules\r\n\r\nThere are 3 basic rules regarding the evaluation:\r\n\r\n* Each found class name of a node will be looked up in the current\r\n  data object. If found, the node will be processed in the new scope.\r\n  Example: the class name `comment` instructs to lookup the name\r\n  `comment` in the data object, which contains the comment array.\r\n\r\n* Arrays repeat the current node and process its elements recursively.\r\n\r\n* Code will be evaluated for text surrounded with braces (works also\r\n  for attributes). The evaluation takes place in the scope of the\r\n  current data object, which is in the example a comment object. So\r\n  the snippet `<a title=\"{time}\">` will lookup the time in the comment\r\n  object and insert into the title attribute.\r\n\r\n### Helper\r\n\r\nCode snippets inside the template will be executed within the scope of\r\na Helper object. If you want to extend it, just add your functions to\r\n`Template.Helper`. At the moment it defines only one function:\r\n\r\n    Template.Helper = {\r\n     \r\n        linkTo: function(text, url) {\r\n            if (url.indexOf('http://') == -1 && url[0] != '/' && url[0] != '#') {\r\n                url = 'http://' + url;\r\n            }\r\n            return '<a href=\"' + url +'\">' + text + '</a>';\r\n        }\r\n     \r\n    };\r\n\r\n### Download\r\n\r\nDownload the script at my [github repository][2].\r\n\r\n [1]: commenting-system-with-lightweight-json-store.html\r\n [2]: http://github.com/georgi/patroon/tree/master\r\n\r\n\r\n### Without jQuery\r\n\r\nWithout jQuery template expansion is a bit verbose:\r\n\r\n    // The comments template will be removed from the DOM!\r\n    var template = new Template('comments-template');\r\n    \r\n    // template will result in a new DOM node\r\n    var result = template.expand(data);\r\n    \r\n    // insert the resulting node into the comments container\r\n    var container = document.getElementsByClassName('comments')[0];\r\n    container.appendChild(result);\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Javascript Template Engine","google":""}